/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
        ext.when            = Conditional clause
----------------------------------------------------------------------------------------
*/

//
// Bam QC options
//

process {
    withName: '.*QC_BAM:PICARD_COLLECTMULTIPLEMETRICS' {
        publishDir = [
            path: { "${params.outdir}/bamqc_collectmultiplemetrics" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: '.*QC_BAM:PICARD_COLLECTHSMETRICS' {
        publishDir = [
            path: { "${params.outdir}/bamqc/collecthsmetrics" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: '.*QC_BAM:QUALIMAP_BAMQC' {
        publishDir = [
            path: { "${params.outdir}/bamqc_qualimap" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: '.*QC_BAM:TIDDIT_COV' {
        ext.args = '-z 500 -w'
        publishDir = [
            path: { "${params.outdir}/tiddit_coverage" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: '.*QC_BAM:UCSC_WIGTOBIGWIG' {
        ext.args = '-clip'
        publishDir = [
            path: { "${params.outdir}/tiddit_coverage" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: '.*QC_BAM:MOSDEPTH' {
        ext.args = '--d4'
        publishDir = [
            path: { "${params.outdir}/mosdepth" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: '.*QC_BAM:PICARD_COLLECTWGSMETRICS' {
        ext.when = params.aligner.equals("bwamem2")
        publishDir = [
            path: { "${params.outdir}/bamqc_collectwgsmetrics_wg" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: '.*QC_BAM:PICARD_COLLECTWGSMETRICS_Y' {
        ext.when = params.aligner.equals("bwamem2")
        publishDir = [
            path: { "${params.outdir}/bamqc_collectwgsmetrics_y" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: '.*QC_BAM:SENTIEON_WGSMETRICS' {
        ext.when = params.aligner.equals("sentieon")
        publishDir = [
            path: { "${params.outdir}/bamqc_collectwgsmetrics_wg" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: '.*QC_BAM:SENTIEON_WGSMETRICS_Y' {
        ext.when = params.aligner.equals("sentieon")
        publishDir = [
            path: { "${params.outdir}/bamqc_collectwgsmetrics_y" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
}
